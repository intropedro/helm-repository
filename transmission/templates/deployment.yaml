apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "transmission.fullname" . }}
  labels:
    {{- include "transmission.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "transmission.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      name: {{ include "transmission.fullname" . }}
      labels:
        {{- include "transmission.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "transmission.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.nodeName }}
      nodeName: {{ .Values.nodeName }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: ui
              containerPort: 9091
              protocol: TCP
            - name: tcp
              containerPort: 51413
              protocol: TCP
            - name: udp
              containerPort: 51413
              protocol: UDP
          volumeMounts:
            - mountPath: /downloads
              name: downloads-volume
            - mountPath: /config
              name: config-volume
            - mountPath: /watch
              name: watch-volume
          env:
            - name: PUID
              value: "{{ .Values.env.puid }}"
            - name: PGID
              value: "{{ .Values.env.pgid }}"
            - name: TZ
              value: "{{ .Values.env.tz }}"
            - name: USER
              value: "{{ .Values.env.user }}"
            {{- if .Values.secrets.use }}
            - name: PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.name }}
                  key: {{ .Values.secrets.key }}
            {{- else}}
            - name: PASS
              value: "{{ randAlphaNum 20 | b64enc }}"
            {{- end}}
      volumes:
        {{- if .Values.volumes.config.useHostPath }}
        - name: config-volume
          hostPath:
            path: {{ .Values.volumes.config.hostPath }}
            type: DirectoryOrCreate
        {{- else if .Values.volumes.config.usePVC }}
        - name: config-volume
          persistentVolumeClaim:
            claimName: {{ .Values.volumes.config.claimName }}
        {{- end }}
        - name: downloads-volume
          hostPath:
            path: {{ .Values.volumes.downloads}}
            type: DirectoryOrCreate
        - name: watch-volume
          hostPath:
            path: {{ .Values.volumes.watch}}
            type: DirectoryOrCreate
      resources:
        {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
